// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RoleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RoleData {

  /// <summary>Holder for reflection information generated from RoleInfo.proto</summary>
  public static partial class RoleInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for RoleInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoleInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Sb2xlSW5mby5wcm90bxIIUm9sZURhdGEibQoIR2FtZUluZm8SLwoMcGxh",
            "eWVyUGVvcGxlGAEgASgLMhkuUm9sZURhdGEuUGVvcGxlUHJvdG9EYXRhEjAK",
            "DWFsbFBlb3BsZUxpc3QYAiADKAsyGS5Sb2xlRGF0YS5QZW9wbGVQcm90b0Rh",
            "dGEiPwoMUHJvcGVydHlEYXRhEhYKDnByb3BlcnR5SWRMaXN0GAEgAygFEhcK",
            "D3Byb3BlcnR5TnVtTGlzdBgCIAMoBSKdAQoPUGVvcGxlUHJvdG9EYXRhEg4K",
            "Bm9ubHlJZBgBIAEoBBIsCgxwcm9wZXJ0eURhdGEYAiABKAsyFi5Sb2xlRGF0",
            "YS5Qcm9wZXJ0eURhdGESHwoXc2Vuc2VkT3RoZXJQZW9wbGVJZExpc3QYAyAD",
            "KAQSKwojZnJpZW5kbGluZXNzVG9TZW5zZWRPdGhlclBlb3BsZUxpc3QYBCAD",
            "KAUiPgoRT3RoZXJJbnZpdGVNZURhdGESKQoGcGVvcGxlGAEgASgLMhkuUm9s",
            "ZURhdGEuUGVvcGxlUHJvdG9EYXRhIlQKFk1lSW52aXRlT3RoZXJQcm90b0Rh",
            "dGESKQoGcGVvcGxlGAEgASgLMhkuUm9sZURhdGEuUGVvcGxlUHJvdG9EYXRh",
            "Eg8KB3JlZnVzZWQYAiABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RoleData.GameInfo), global::RoleData.GameInfo.Parser, new[]{ "PlayerPeople", "AllPeopleList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RoleData.PropertyData), global::RoleData.PropertyData.Parser, new[]{ "PropertyIdList", "PropertyNumList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RoleData.PeopleProtoData), global::RoleData.PeopleProtoData.Parser, new[]{ "OnlyId", "PropertyData", "SensedOtherPeopleIdList", "FriendlinessToSensedOtherPeopleList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RoleData.OtherInviteMeData), global::RoleData.OtherInviteMeData.Parser, new[]{ "People" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RoleData.MeInviteOtherProtoData), global::RoleData.MeInviteOtherProtoData.Parser, new[]{ "People", "Refused" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///游戏基本信息
  /// </summary>
  public sealed partial class GameInfo : pb::IMessage<GameInfo> {
    private static readonly pb::MessageParser<GameInfo> _parser = new pb::MessageParser<GameInfo>(() => new GameInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RoleData.RoleInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameInfo(GameInfo other) : this() {
      PlayerPeople = other.playerPeople_ != null ? other.PlayerPeople.Clone() : null;
      allPeopleList_ = other.allPeopleList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameInfo Clone() {
      return new GameInfo(this);
    }

    /// <summary>Field number for the "playerPeople" field.</summary>
    public const int PlayerPeopleFieldNumber = 1;
    private global::RoleData.PeopleProtoData playerPeople_;
    /// <summary>
    ///玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RoleData.PeopleProtoData PlayerPeople {
      get { return playerPeople_; }
      set {
        playerPeople_ = value;
      }
    }

    /// <summary>Field number for the "allPeopleList" field.</summary>
    public const int AllPeopleListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RoleData.PeopleProtoData> _repeated_allPeopleList_codec
        = pb::FieldCodec.ForMessage(18, global::RoleData.PeopleProtoData.Parser);
    private readonly pbc::RepeatedField<global::RoleData.PeopleProtoData> allPeopleList_ = new pbc::RepeatedField<global::RoleData.PeopleProtoData>();
    /// <summary>
    ///所有角色
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RoleData.PeopleProtoData> AllPeopleList {
      get { return allPeopleList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerPeople, other.PlayerPeople)) return false;
      if(!allPeopleList_.Equals(other.allPeopleList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerPeople_ != null) hash ^= PlayerPeople.GetHashCode();
      hash ^= allPeopleList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerPeople_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerPeople);
      }
      allPeopleList_.WriteTo(output, _repeated_allPeopleList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerPeople_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPeople);
      }
      size += allPeopleList_.CalculateSize(_repeated_allPeopleList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameInfo other) {
      if (other == null) {
        return;
      }
      if (other.playerPeople_ != null) {
        if (playerPeople_ == null) {
          playerPeople_ = new global::RoleData.PeopleProtoData();
        }
        PlayerPeople.MergeFrom(other.PlayerPeople);
      }
      allPeopleList_.Add(other.allPeopleList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerPeople_ == null) {
              playerPeople_ = new global::RoleData.PeopleProtoData();
            }
            input.ReadMessage(playerPeople_);
            break;
          }
          case 18: {
            allPeopleList_.AddEntriesFrom(input, _repeated_allPeopleList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///属性 
  /// </summary>
  public sealed partial class PropertyData : pb::IMessage<PropertyData> {
    private static readonly pb::MessageParser<PropertyData> _parser = new pb::MessageParser<PropertyData>(() => new PropertyData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RoleData.RoleInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyData(PropertyData other) : this() {
      propertyIdList_ = other.propertyIdList_.Clone();
      propertyNumList_ = other.propertyNumList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyData Clone() {
      return new PropertyData(this);
    }

    /// <summary>Field number for the "propertyIdList" field.</summary>
    public const int PropertyIdListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_propertyIdList_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> propertyIdList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PropertyIdList {
      get { return propertyIdList_; }
    }

    /// <summary>Field number for the "propertyNumList" field.</summary>
    public const int PropertyNumListFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_propertyNumList_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> propertyNumList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PropertyNumList {
      get { return propertyNumList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!propertyIdList_.Equals(other.propertyIdList_)) return false;
      if(!propertyNumList_.Equals(other.propertyNumList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= propertyIdList_.GetHashCode();
      hash ^= propertyNumList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      propertyIdList_.WriteTo(output, _repeated_propertyIdList_codec);
      propertyNumList_.WriteTo(output, _repeated_propertyNumList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += propertyIdList_.CalculateSize(_repeated_propertyIdList_codec);
      size += propertyNumList_.CalculateSize(_repeated_propertyNumList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyData other) {
      if (other == null) {
        return;
      }
      propertyIdList_.Add(other.propertyIdList_);
      propertyNumList_.Add(other.propertyNumList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            propertyIdList_.AddEntriesFrom(input, _repeated_propertyIdList_codec);
            break;
          }
          case 18:
          case 16: {
            propertyNumList_.AddEntriesFrom(input, _repeated_propertyNumList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///角色数据
  /// </summary>
  public sealed partial class PeopleProtoData : pb::IMessage<PeopleProtoData> {
    private static readonly pb::MessageParser<PeopleProtoData> _parser = new pb::MessageParser<PeopleProtoData>(() => new PeopleProtoData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeopleProtoData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RoleData.RoleInfoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeopleProtoData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeopleProtoData(PeopleProtoData other) : this() {
      onlyId_ = other.onlyId_;
      PropertyData = other.propertyData_ != null ? other.PropertyData.Clone() : null;
      sensedOtherPeopleIdList_ = other.sensedOtherPeopleIdList_.Clone();
      friendlinessToSensedOtherPeopleList_ = other.friendlinessToSensedOtherPeopleList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeopleProtoData Clone() {
      return new PeopleProtoData(this);
    }

    /// <summary>Field number for the "onlyId" field.</summary>
    public const int OnlyIdFieldNumber = 1;
    private ulong onlyId_;
    /// <summary>
    ///唯一id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OnlyId {
      get { return onlyId_; }
      set {
        onlyId_ = value;
      }
    }

    /// <summary>Field number for the "propertyData" field.</summary>
    public const int PropertyDataFieldNumber = 2;
    private global::RoleData.PropertyData propertyData_;
    /// <summary>
    ///属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RoleData.PropertyData PropertyData {
      get { return propertyData_; }
      set {
        propertyData_ = value;
      }
    }

    /// <summary>Field number for the "sensedOtherPeopleIdList" field.</summary>
    public const int SensedOtherPeopleIdListFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_sensedOtherPeopleIdList_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> sensedOtherPeopleIdList_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    ///感受到的其他人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> SensedOtherPeopleIdList {
      get { return sensedOtherPeopleIdList_; }
    }

    /// <summary>Field number for the "friendlinessToSensedOtherPeopleList" field.</summary>
    public const int FriendlinessToSensedOtherPeopleListFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_friendlinessToSensedOtherPeopleList_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> friendlinessToSensedOtherPeopleList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///对感受到的人的好感度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FriendlinessToSensedOtherPeopleList {
      get { return friendlinessToSensedOtherPeopleList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeopleProtoData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeopleProtoData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OnlyId != other.OnlyId) return false;
      if (!object.Equals(PropertyData, other.PropertyData)) return false;
      if(!sensedOtherPeopleIdList_.Equals(other.sensedOtherPeopleIdList_)) return false;
      if(!friendlinessToSensedOtherPeopleList_.Equals(other.friendlinessToSensedOtherPeopleList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OnlyId != 0UL) hash ^= OnlyId.GetHashCode();
      if (propertyData_ != null) hash ^= PropertyData.GetHashCode();
      hash ^= sensedOtherPeopleIdList_.GetHashCode();
      hash ^= friendlinessToSensedOtherPeopleList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OnlyId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(OnlyId);
      }
      if (propertyData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PropertyData);
      }
      sensedOtherPeopleIdList_.WriteTo(output, _repeated_sensedOtherPeopleIdList_codec);
      friendlinessToSensedOtherPeopleList_.WriteTo(output, _repeated_friendlinessToSensedOtherPeopleList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OnlyId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OnlyId);
      }
      if (propertyData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertyData);
      }
      size += sensedOtherPeopleIdList_.CalculateSize(_repeated_sensedOtherPeopleIdList_codec);
      size += friendlinessToSensedOtherPeopleList_.CalculateSize(_repeated_friendlinessToSensedOtherPeopleList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeopleProtoData other) {
      if (other == null) {
        return;
      }
      if (other.OnlyId != 0UL) {
        OnlyId = other.OnlyId;
      }
      if (other.propertyData_ != null) {
        if (propertyData_ == null) {
          propertyData_ = new global::RoleData.PropertyData();
        }
        PropertyData.MergeFrom(other.PropertyData);
      }
      sensedOtherPeopleIdList_.Add(other.sensedOtherPeopleIdList_);
      friendlinessToSensedOtherPeopleList_.Add(other.friendlinessToSensedOtherPeopleList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OnlyId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (propertyData_ == null) {
              propertyData_ = new global::RoleData.PropertyData();
            }
            input.ReadMessage(propertyData_);
            break;
          }
          case 26:
          case 24: {
            sensedOtherPeopleIdList_.AddEntriesFrom(input, _repeated_sensedOtherPeopleIdList_codec);
            break;
          }
          case 34:
          case 32: {
            friendlinessToSensedOtherPeopleList_.AddEntriesFrom(input, _repeated_friendlinessToSensedOtherPeopleList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///别人邀请我的数据
  /// </summary>
  public sealed partial class OtherInviteMeData : pb::IMessage<OtherInviteMeData> {
    private static readonly pb::MessageParser<OtherInviteMeData> _parser = new pb::MessageParser<OtherInviteMeData>(() => new OtherInviteMeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherInviteMeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RoleData.RoleInfoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInviteMeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInviteMeData(OtherInviteMeData other) : this() {
      People = other.people_ != null ? other.People.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInviteMeData Clone() {
      return new OtherInviteMeData(this);
    }

    /// <summary>Field number for the "people" field.</summary>
    public const int PeopleFieldNumber = 1;
    private global::RoleData.PeopleProtoData people_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RoleData.PeopleProtoData People {
      get { return people_; }
      set {
        people_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherInviteMeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherInviteMeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(People, other.People)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (people_ != null) hash ^= People.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (people_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(People);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (people_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(People);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherInviteMeData other) {
      if (other == null) {
        return;
      }
      if (other.people_ != null) {
        if (people_ == null) {
          people_ = new global::RoleData.PeopleProtoData();
        }
        People.MergeFrom(other.People);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (people_ == null) {
              people_ = new global::RoleData.PeopleProtoData();
            }
            input.ReadMessage(people_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///我邀请别人的数据
  /// </summary>
  public sealed partial class MeInviteOtherProtoData : pb::IMessage<MeInviteOtherProtoData> {
    private static readonly pb::MessageParser<MeInviteOtherProtoData> _parser = new pb::MessageParser<MeInviteOtherProtoData>(() => new MeInviteOtherProtoData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MeInviteOtherProtoData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RoleData.RoleInfoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeInviteOtherProtoData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeInviteOtherProtoData(MeInviteOtherProtoData other) : this() {
      People = other.people_ != null ? other.People.Clone() : null;
      refused_ = other.refused_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeInviteOtherProtoData Clone() {
      return new MeInviteOtherProtoData(this);
    }

    /// <summary>Field number for the "people" field.</summary>
    public const int PeopleFieldNumber = 1;
    private global::RoleData.PeopleProtoData people_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RoleData.PeopleProtoData People {
      get { return people_; }
      set {
        people_ = value;
      }
    }

    /// <summary>Field number for the "refused" field.</summary>
    public const int RefusedFieldNumber = 2;
    private bool refused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Refused {
      get { return refused_; }
      set {
        refused_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MeInviteOtherProtoData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MeInviteOtherProtoData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(People, other.People)) return false;
      if (Refused != other.Refused) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (people_ != null) hash ^= People.GetHashCode();
      if (Refused != false) hash ^= Refused.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (people_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(People);
      }
      if (Refused != false) {
        output.WriteRawTag(16);
        output.WriteBool(Refused);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (people_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(People);
      }
      if (Refused != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MeInviteOtherProtoData other) {
      if (other == null) {
        return;
      }
      if (other.people_ != null) {
        if (people_ == null) {
          people_ = new global::RoleData.PeopleProtoData();
        }
        People.MergeFrom(other.People);
      }
      if (other.Refused != false) {
        Refused = other.Refused;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (people_ == null) {
              people_ = new global::RoleData.PeopleProtoData();
            }
            input.ReadMessage(people_);
            break;
          }
          case 16: {
            Refused = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
